"""basic db structure

Revision ID: 709508bd690a
Revises: 
Create Date: 2025-08-21 12:59:03.469540

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '709508bd690a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_token_blacklist_token'), table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.add_column('user_role', sa.Column('role_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('user_role_role_fkey'), 'user_role', type_='foreignkey')
    op.create_foreign_key(None, 'user_role', 'role', ['role_id'], ['id'])
    op.drop_column('user_role', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_role', sa.Column('role', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user_role', type_='foreignkey')
    op.create_foreign_key(op.f('user_role_role_fkey'), 'user_role', 'role', ['role'], ['id'])
    op.drop_column('user_role', 'role_id')
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blacklist_pkey'))
    )
    op.create_index(op.f('ix_token_blacklist_token'), 'token_blacklist', ['token'], unique=True)
    # ### end Alembic commands ###
